/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/projects/[id]/websites/[websiteId]/crawl/route";
exports.ids = ["app/api/projects/[id]/websites/[websiteId]/crawl/route"];
exports.modules = {

/***/ "(rsc)/./app/api/projects/[id]/websites/[websiteId]/crawl/route.ts":
/*!*******************************************************************!*\
  !*** ./app/api/projects/[id]/websites/[websiteId]/crawl/route.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_config_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/config/database */ \"(rsc)/./lib/config/database.ts\");\n/* harmony import */ var _lib_services_WebsiteService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/services/WebsiteService */ \"(rsc)/./lib/services/WebsiteService.ts\");\n\n\n\n// Helper function to extract clean text from HTML using framework ContentProcessor\nfunction extractTextFromHtml(html, framework) {\n    if (!html) return '';\n    // Try to use framework's ContentProcessor if available\n    try {\n        if (framework.contentProcessor && framework.contentProcessor.extractMainContent) {\n            return framework.contentProcessor.extractMainContent(html);\n        } else if (framework.extractMainContent) {\n            return framework.extractMainContent(html);\n        }\n    } catch (error) {\n        console.warn('Framework content extraction failed, falling back to manual extraction:', error);\n    }\n    // Fallback to manual HTML text extraction\n    let cleanText = html.replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '');\n    cleanText = cleanText.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '');\n    cleanText = cleanText.replace(/<[^>]+>/g, ' ');\n    cleanText = cleanText.replace(/&nbsp;/g, ' ');\n    cleanText = cleanText.replace(/&amp;/g, '&');\n    cleanText = cleanText.replace(/&lt;/g, '<');\n    cleanText = cleanText.replace(/&gt;/g, '>');\n    cleanText = cleanText.replace(/&quot;/g, '\"');\n    cleanText = cleanText.replace(/&#39;/g, \"'\");\n    cleanText = cleanText.replace(/\\s+/g, ' ');\n    return cleanText.trim();\n}\n/**\n * POST /api/projects/[id]/websites/[websiteId]/crawl - Start website crawling\n */ async function POST(request, { params }) {\n    try {\n        const resolvedParams = await params;\n        const { websiteId } = resolvedParams;\n        const body = await request.json();\n        // Get crawling configuration from environment or use defaults\n        const maxPages = body.maxPages || parseInt(process.env.CRAWL_MAX_PAGES || '10');\n        const maxDepth = body.maxDepth || parseInt(process.env.CRAWL_MAX_DEPTH || '2');\n        const delay = parseInt(process.env.CRAWL_DELAY || '1000');\n        const framework = await (0,_lib_config_database__WEBPACK_IMPORTED_MODULE_1__.createFramework)();\n        const websiteService = new _lib_services_WebsiteService__WEBPACK_IMPORTED_MODULE_2__.WebsiteService(framework);\n        // Get the website to verify it exists\n        const website = await websiteService.getWebsiteById(websiteId);\n        if (!website) {\n            await framework.dispose();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Website not found'\n            }, {\n                status: 404\n            });\n        }\n        // Check if already crawling\n        if (website.crawl_status === 'crawling') {\n            await framework.dispose();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Website is already being crawled'\n            }, {\n                status: 409\n            });\n        }\n        // Update crawl status to \"crawling\"\n        await websiteService.updateCrawlStatus(websiteId, 'crawling');\n        // Start the crawling process\n        console.log(`Starting crawl for website: ${website.url} (max pages: ${maxPages}, max depth: ${maxDepth})`);\n        try {\n            // Use the framework's crawling capabilities\n            const crawlResult = await framework.discoverCrawlablePages(website.url, {\n                maxPages,\n                maxDepth,\n                followExternalLinks: false,\n                delay,\n                includePatterns: [],\n                excludePatterns: [\n                    '/admin/*',\n                    '/wp-admin/*',\n                    '*.pdf',\n                    '*.jpg',\n                    '*.png',\n                    '*.gif',\n                    '*.css',\n                    '*.js'\n                ]\n            });\n            console.log(`Crawl completed for ${website.url}:`, crawlResult);\n            // Store discovered pages in the database\n            let savedPages = 0;\n            let failedPages = 0;\n            const pages = crawlResult.data?.pages || [];\n            for (const page of pages){\n                try {\n                    // Debug: log basic page info\n                    console.log(`Processing page: ${page.url} (depth: ${page.depth})`);\n                    // Step 2: Scrape full content for each discovered page\n                    let pageContent = null;\n                    let rawHtml = null;\n                    let actualWordCount = page.wordCount || 0;\n                    try {\n                        console.log(`Scraping full content for: ${page.url}`);\n                        // Try to scrape the page content using framework methods\n                        const scrapedData = await framework.scrapeWebPage(page.url);\n                        if (scrapedData && scrapedData.content) {\n                            // The framework returns HTML in the content field\n                            rawHtml = scrapedData.content;\n                            // Extract clean text from HTML using the framework's ContentProcessor\n                            pageContent = extractTextFromHtml(scrapedData.content, framework);\n                            // Update word count with actual clean text content\n                            if (pageContent) {\n                                actualWordCount = pageContent.split(/\\s+/).filter((word)=>word.length > 0).length;\n                            }\n                            console.log(`Successfully scraped content: ${pageContent?.length || 0} chars text, ${rawHtml?.length || 0} chars HTML`);\n                        }\n                    } catch (scrapeError) {\n                        console.warn(`Failed to scrape content for ${page.url}:`, scrapeError);\n                    // Continue with basic info even if content scraping fails\n                    }\n                    const pageQuery = `\n            INSERT INTO pages (\n              website_id, \n              url, \n              title, \n              content, \n              raw_html, \n              depth, \n              word_count, \n              link_count,\n              scraping_status,\n              discovered_at,\n              scraped_at\n            ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)\n            ON CONFLICT (website_id, url) \n            DO UPDATE SET\n              title = EXCLUDED.title,\n              content = EXCLUDED.content,\n              raw_html = EXCLUDED.raw_html,\n              word_count = EXCLUDED.word_count,\n              link_count = EXCLUDED.link_count,\n              scraping_status = EXCLUDED.scraping_status,\n              scraped_at = EXCLUDED.scraped_at,\n              updated_at = CURRENT_TIMESTAMP\n          `;\n                    await framework.executeQuery(pageQuery, [\n                        websiteId,\n                        page.url,\n                        page.title || null,\n                        pageContent,\n                        rawHtml,\n                        page.depth || 0,\n                        actualWordCount,\n                        page.linkCount || 0,\n                        'crawled',\n                        new Date().toISOString(),\n                        new Date().toISOString()\n                    ]);\n                    savedPages++;\n                } catch (pageError) {\n                    console.error(`Failed to save page ${page.url}:`, pageError);\n                    failedPages++;\n                }\n            }\n            // Update website crawl statistics\n            await websiteService.updateCrawlStatus(websiteId, 'completed', {\n                total_pages_discovered: pages.length,\n                pages_crawled: savedPages,\n                pages_failed: failedPages\n            });\n            await framework.dispose();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: 'Website crawling completed successfully',\n                data: {\n                    websiteId,\n                    totalPages: pages.length,\n                    savedPages,\n                    failedPages,\n                    crawlData: crawlResult.data\n                }\n            });\n        } catch (crawlError) {\n            console.error('Crawling failed:', crawlError);\n            // Update status to failed\n            await websiteService.updateCrawlStatus(websiteId, 'failed');\n            await framework.dispose();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Failed to crawl website',\n                details: crawlError instanceof Error ? crawlError.message : 'Unknown error'\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error('Error starting crawl:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to start crawling'\n        }, {\n            status: 500\n        });\n    }\n}\n/**\n * GET /api/projects/[id]/websites/[websiteId]/crawl - Get crawl status\n */ async function GET(request, { params }) {\n    try {\n        const resolvedParams = await params;\n        const { websiteId } = resolvedParams;\n        const framework = await (0,_lib_config_database__WEBPACK_IMPORTED_MODULE_1__.createFramework)();\n        const websiteService = new _lib_services_WebsiteService__WEBPACK_IMPORTED_MODULE_2__.WebsiteService(framework);\n        const progress = await websiteService.getCrawlProgress(websiteId);\n        await framework.dispose();\n        if (!progress) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Website not found'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: progress\n        });\n    } catch (error) {\n        console.error('Error getting crawl status:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to get crawl status'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/projects/[id]/websites/[websiteId]/crawl/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/config/database.ts":
/*!********************************!*\
  !*** ./lib/config/database.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFramework: () => (/* binding */ createFramework),\n/* harmony export */   getDatabaseConfig: () => (/* binding */ getDatabaseConfig),\n/* harmony export */   testDatabaseConnection: () => (/* binding */ testDatabaseConnection)\n/* harmony export */ });\n/* harmony import */ var _juhomat_hexagonal_ai_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @juhomat/hexagonal-ai-framework */ \"(rsc)/./node_modules/@juhomat/hexagonal-ai-framework/lib/src/index.js\");\n/* harmony import */ var _juhomat_hexagonal_ai_framework__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_juhomat_hexagonal_ai_framework__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Load environment variables\nif (true) {\n    (__webpack_require__(/*! dotenv */ \"(rsc)/./node_modules/dotenv/lib/main.js\").config)();\n}\n/**\n * Get database configuration for the framework\n */ function getDatabaseConfig() {\n    // Always provide the required fields for the DatabaseConfig type\n    const baseConfig = {\n        host: process.env.DB_HOST || 'localhost',\n        port: parseInt(process.env.DB_PORT || '5432'),\n        database: process.env.DB_NAME || 'hubspot_onboarding',\n        username: process.env.DB_USERNAME || 'postgres',\n        password: process.env.DB_PASSWORD || 'postgres',\n        ssl: process.env.DB_SSL === 'true' || \"development\" === 'production',\n        maxConnections: parseInt(process.env.DB_MAX_CONNECTIONS || '20')\n    };\n    // For Heroku deployment, if DATABASE_URL is available, parse it\n    if (process.env.DATABASE_URL) {\n        try {\n            const url = new URL(process.env.DATABASE_URL);\n            return {\n                ...baseConfig,\n                host: url.hostname,\n                port: parseInt(url.port) || 5432,\n                database: url.pathname.slice(1),\n                username: url.username,\n                password: url.password,\n                ssl: \"development\" === 'production'\n            };\n        } catch (error) {\n            console.warn('Failed to parse DATABASE_URL, using fallback config');\n        }\n    }\n    return baseConfig;\n}\n/**\n * Create and initialize the ApplicationFramework with database configuration\n */ async function createFramework() {\n    const env =  false ? 0 : 'development';\n    const config = new _juhomat_hexagonal_ai_framework__WEBPACK_IMPORTED_MODULE_0__.FrameworkConfigBuilder().environment(env).debug(\"development\" !== 'production').database(getDatabaseConfig()).build();\n    const framework = new _juhomat_hexagonal_ai_framework__WEBPACK_IMPORTED_MODULE_0__.ApplicationFramework(config);\n    await framework.initialize();\n    return framework;\n}\n/**\n * Test database connection\n */ async function testDatabaseConnection() {\n    try {\n        const framework = await createFramework();\n        const isHealthy = await framework.isDatabaseHealthy();\n        await framework.dispose();\n        return isHealthy;\n    } catch (error) {\n        console.error('Database connection test failed:', error);\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY29uZmlnL2RhdGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ0U7QUFFekUsNkJBQTZCO0FBQzdCLElBQUksSUFBNkIsRUFBRTtJQUNqQ0UscUZBQXdCO0FBQzFCO0FBRUE7O0NBRUMsR0FDTSxTQUFTRTtJQUNkLGlFQUFpRTtJQUNqRSxNQUFNQyxhQUFhO1FBQ2pCQyxNQUFNQyxRQUFRQyxHQUFHLENBQUNDLE9BQU8sSUFBSTtRQUM3QkMsTUFBTUMsU0FBU0osUUFBUUMsR0FBRyxDQUFDSSxPQUFPLElBQUk7UUFDdENDLFVBQVVOLFFBQVFDLEdBQUcsQ0FBQ00sT0FBTyxJQUFJO1FBQ2pDQyxVQUFVUixRQUFRQyxHQUFHLENBQUNRLFdBQVcsSUFBSTtRQUNyQ0MsVUFBVVYsUUFBUUMsR0FBRyxDQUFDVSxXQUFXLElBQUk7UUFDckNDLEtBQUtaLFFBQVFDLEdBQUcsQ0FBQ1ksTUFBTSxLQUFLLFVBQVViLGtCQUF5QjtRQUMvRGMsZ0JBQWdCVixTQUFTSixRQUFRQyxHQUFHLENBQUNjLGtCQUFrQixJQUFJO0lBQzdEO0lBRUEsZ0VBQWdFO0lBQ2hFLElBQUlmLFFBQVFDLEdBQUcsQ0FBQ2UsWUFBWSxFQUFFO1FBQzVCLElBQUk7WUFDRixNQUFNQyxNQUFNLElBQUlDLElBQUlsQixRQUFRQyxHQUFHLENBQUNlLFlBQVk7WUFDNUMsT0FBTztnQkFDTCxHQUFHbEIsVUFBVTtnQkFDYkMsTUFBTWtCLElBQUlFLFFBQVE7Z0JBQ2xCaEIsTUFBTUMsU0FBU2EsSUFBSWQsSUFBSSxLQUFLO2dCQUM1QkcsVUFBVVcsSUFBSUcsUUFBUSxDQUFDQyxLQUFLLENBQUM7Z0JBQzdCYixVQUFVUyxJQUFJVCxRQUFRO2dCQUN0QkUsVUFBVU8sSUFBSVAsUUFBUTtnQkFDdEJFLEtBQUtaLGtCQUF5QjtZQUNoQztRQUNGLEVBQUUsT0FBT3NCLE9BQU87WUFDZEMsUUFBUUMsSUFBSSxDQUFDO1FBQ2Y7SUFDRjtJQUVBLE9BQU8xQjtBQUNUO0FBRUE7O0NBRUMsR0FDTSxlQUFlMkI7SUFDcEIsTUFBTXhCLE1BQU1ELE1BQXFDLEdBQUcsQ0FBWSxHQUFHO0lBRW5FLE1BQU1KLFNBQVMsSUFBSUYsbUZBQXNCQSxHQUN0Q2dDLFdBQVcsQ0FBQ3pCLEtBQ1owQixLQUFLLENBQUMzQixrQkFBeUIsY0FDL0JNLFFBQVEsQ0FBQ1QscUJBQ1QrQixLQUFLO0lBRVIsTUFBTUMsWUFBWSxJQUFJcEMsaUZBQW9CQSxDQUFDRztJQUMzQyxNQUFNaUMsVUFBVUMsVUFBVTtJQUUxQixPQUFPRDtBQUNUO0FBRUE7O0NBRUMsR0FDTSxlQUFlRTtJQUNwQixJQUFJO1FBQ0YsTUFBTUYsWUFBWSxNQUFNSjtRQUN4QixNQUFNTyxZQUFZLE1BQU1ILFVBQVVJLGlCQUFpQjtRQUNuRCxNQUFNSixVQUFVSyxPQUFPO1FBQ3ZCLE9BQU9GO0lBQ1QsRUFBRSxPQUFPVixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvanVob21hdHRpbGEvRG9jdW1lbnRzL0FkdmFuY2Ugbm9kZS5qcyBwcm9qZWN0cy9odWJzcG90LW9uYm9hcmRpbmcvbGliL2NvbmZpZy9kYXRhYmFzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBsaWNhdGlvbkZyYW1ld29yayB9IGZyb20gJ0BqdWhvbWF0L2hleGFnb25hbC1haS1mcmFtZXdvcmsnO1xuaW1wb3J0IHsgRnJhbWV3b3JrQ29uZmlnQnVpbGRlciB9IGZyb20gJ0BqdWhvbWF0L2hleGFnb25hbC1haS1mcmFtZXdvcmsnO1xuXG4vLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlc1xuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gIHJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xufVxuXG4vKipcbiAqIEdldCBkYXRhYmFzZSBjb25maWd1cmF0aW9uIGZvciB0aGUgZnJhbWV3b3JrXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREYXRhYmFzZUNvbmZpZygpIHtcbiAgLy8gQWx3YXlzIHByb3ZpZGUgdGhlIHJlcXVpcmVkIGZpZWxkcyBmb3IgdGhlIERhdGFiYXNlQ29uZmlnIHR5cGVcbiAgY29uc3QgYmFzZUNvbmZpZyA9IHtcbiAgICBob3N0OiBwcm9jZXNzLmVudi5EQl9IT1NUIHx8ICdsb2NhbGhvc3QnLFxuICAgIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52LkRCX1BPUlQgfHwgJzU0MzInKSxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSB8fCAnaHVic3BvdF9vbmJvYXJkaW5nJyxcbiAgICB1c2VybmFtZTogcHJvY2Vzcy5lbnYuREJfVVNFUk5BTUUgfHwgJ3Bvc3RncmVzJyxcbiAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTU1dPUkQgfHwgJ3Bvc3RncmVzJyxcbiAgICBzc2w6IHByb2Nlc3MuZW52LkRCX1NTTCA9PT0gJ3RydWUnIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gICAgbWF4Q29ubmVjdGlvbnM6IHBhcnNlSW50KHByb2Nlc3MuZW52LkRCX01BWF9DT05ORUNUSU9OUyB8fCAnMjAnKVxuICB9O1xuXG4gIC8vIEZvciBIZXJva3UgZGVwbG95bWVudCwgaWYgREFUQUJBU0VfVVJMIGlzIGF2YWlsYWJsZSwgcGFyc2UgaXRcbiAgaWYgKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5iYXNlQ29uZmlnLFxuICAgICAgICBob3N0OiB1cmwuaG9zdG5hbWUsXG4gICAgICAgIHBvcnQ6IHBhcnNlSW50KHVybC5wb3J0KSB8fCA1NDMyLFxuICAgICAgICBkYXRhYmFzZTogdXJsLnBhdGhuYW1lLnNsaWNlKDEpLCAvLyBSZW1vdmUgbGVhZGluZyAvXG4gICAgICAgIHVzZXJuYW1lOiB1cmwudXNlcm5hbWUsXG4gICAgICAgIHBhc3N3b3JkOiB1cmwucGFzc3dvcmQsXG4gICAgICAgIHNzbDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJ1xuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gcGFyc2UgREFUQUJBU0VfVVJMLCB1c2luZyBmYWxsYmFjayBjb25maWcnKTtcbiAgICB9XG4gIH1cbiAgXG4gIHJldHVybiBiYXNlQ29uZmlnO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbmQgaW5pdGlhbGl6ZSB0aGUgQXBwbGljYXRpb25GcmFtZXdvcmsgd2l0aCBkYXRhYmFzZSBjb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVGcmFtZXdvcmsoKTogUHJvbWlzZTxBcHBsaWNhdGlvbkZyYW1ld29yaz4ge1xuICBjb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ3Byb2R1Y3Rpb24nIDogJ2RldmVsb3BtZW50JztcbiAgXG4gIGNvbnN0IGNvbmZpZyA9IG5ldyBGcmFtZXdvcmtDb25maWdCdWlsZGVyKClcbiAgICAuZW52aXJvbm1lbnQoZW52KVxuICAgIC5kZWJ1Zyhwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKVxuICAgIC5kYXRhYmFzZShnZXREYXRhYmFzZUNvbmZpZygpKVxuICAgIC5idWlsZCgpO1xuXG4gIGNvbnN0IGZyYW1ld29yayA9IG5ldyBBcHBsaWNhdGlvbkZyYW1ld29yayhjb25maWcpO1xuICBhd2FpdCBmcmFtZXdvcmsuaW5pdGlhbGl6ZSgpO1xuICBcbiAgcmV0dXJuIGZyYW1ld29yaztcbn1cblxuLyoqXG4gKiBUZXN0IGRhdGFiYXNlIGNvbm5lY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRlc3REYXRhYmFzZUNvbm5lY3Rpb24oKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZnJhbWV3b3JrID0gYXdhaXQgY3JlYXRlRnJhbWV3b3JrKCk7XG4gICAgY29uc3QgaXNIZWFsdGh5ID0gYXdhaXQgZnJhbWV3b3JrLmlzRGF0YWJhc2VIZWFsdGh5KCk7XG4gICAgYXdhaXQgZnJhbWV3b3JrLmRpc3Bvc2UoKTtcbiAgICByZXR1cm4gaXNIZWFsdGh5O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufSAiXSwibmFtZXMiOlsiQXBwbGljYXRpb25GcmFtZXdvcmsiLCJGcmFtZXdvcmtDb25maWdCdWlsZGVyIiwicmVxdWlyZSIsImNvbmZpZyIsImdldERhdGFiYXNlQ29uZmlnIiwiYmFzZUNvbmZpZyIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInBvcnQiLCJwYXJzZUludCIsIkRCX1BPUlQiLCJkYXRhYmFzZSIsIkRCX05BTUUiLCJ1c2VybmFtZSIsIkRCX1VTRVJOQU1FIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsInNzbCIsIkRCX1NTTCIsIm1heENvbm5lY3Rpb25zIiwiREJfTUFYX0NPTk5FQ1RJT05TIiwiREFUQUJBU0VfVVJMIiwidXJsIiwiVVJMIiwiaG9zdG5hbWUiLCJwYXRobmFtZSIsInNsaWNlIiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUZyYW1ld29yayIsImVudmlyb25tZW50IiwiZGVidWciLCJidWlsZCIsImZyYW1ld29yayIsImluaXRpYWxpemUiLCJ0ZXN0RGF0YWJhc2VDb25uZWN0aW9uIiwiaXNIZWFsdGh5IiwiaXNEYXRhYmFzZUhlYWx0aHkiLCJkaXNwb3NlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/config/database.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/WebsiteService.ts":
/*!****************************************!*\
  !*** ./lib/services/WebsiteService.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebsiteService: () => (/* binding */ WebsiteService)\n/* harmony export */ });\nclass WebsiteService {\n    constructor(framework){\n        this.framework = framework;\n    }\n    async getWebsitesByProject(projectId) {\n        const query = `\n      SELECT \n        id,\n        project_id,\n        url,\n        name,\n        description,\n        status,\n        crawl_status,\n        total_pages_discovered,\n        pages_crawled,\n        pages_failed,\n        max_pages,\n        max_depth,\n        started_at,\n        completed_at,\n        created_date,\n        updated_at\n      FROM websites \n      WHERE project_id = $1 \n      ORDER BY created_date ASC\n    `;\n        const result = await this.framework.executeQuery(query, [\n            projectId\n        ]);\n        return result.rows?.map((row)=>this.mapRowToWebsite(row)) || [];\n    }\n    async getWebsiteById(id) {\n        const query = `\n      SELECT \n        id,\n        project_id,\n        url,\n        name,\n        description,\n        status,\n        crawl_status,\n        total_pages_discovered,\n        pages_crawled,\n        pages_failed,\n        max_pages,\n        max_depth,\n        started_at,\n        completed_at,\n        created_date,\n        updated_at\n      FROM websites \n      WHERE id = $1\n    `;\n        const result = await this.framework.executeQuery(query, [\n            id\n        ]);\n        if (!result.rows || result.rows.length === 0) {\n            return null;\n        }\n        return this.mapRowToWebsite(result.rows[0]);\n    }\n    async createWebsite(websiteData) {\n        const query = `\n      INSERT INTO websites (\n        project_id, \n        url, \n        name, \n        description, \n        status, \n        max_pages, \n        max_depth\n      )\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      RETURNING \n        id,\n        project_id,\n        url,\n        name,\n        description,\n        status,\n        crawl_status,\n        total_pages_discovered,\n        pages_crawled,\n        pages_failed,\n        max_pages,\n        max_depth,\n        started_at,\n        completed_at,\n        created_date,\n        updated_at\n    `;\n        const values = [\n            websiteData.project_id,\n            websiteData.url,\n            websiteData.name || null,\n            websiteData.description || null,\n            websiteData.status || 'active',\n            websiteData.max_pages || 30,\n            websiteData.max_depth || 3\n        ];\n        const result = await this.framework.executeQuery(query, values);\n        if (!result.rows || result.rows.length === 0) {\n            throw new Error('Failed to create website');\n        }\n        return this.mapRowToWebsite(result.rows[0]);\n    }\n    async updateWebsite(id, updateData) {\n        const setClauses = [];\n        const values = [];\n        let paramIndex = 1;\n        if (updateData.url !== undefined) {\n            setClauses.push(`url = $${paramIndex++}`);\n            values.push(updateData.url);\n        }\n        if (updateData.name !== undefined) {\n            setClauses.push(`name = $${paramIndex++}`);\n            values.push(updateData.name);\n        }\n        if (updateData.description !== undefined) {\n            setClauses.push(`description = $${paramIndex++}`);\n            values.push(updateData.description);\n        }\n        if (updateData.status !== undefined) {\n            setClauses.push(`status = $${paramIndex++}`);\n            values.push(updateData.status);\n        }\n        if (updateData.crawl_status !== undefined) {\n            setClauses.push(`crawl_status = $${paramIndex++}`);\n            values.push(updateData.crawl_status);\n        }\n        if (updateData.max_pages !== undefined) {\n            setClauses.push(`max_pages = $${paramIndex++}`);\n            values.push(updateData.max_pages);\n        }\n        if (updateData.max_depth !== undefined) {\n            setClauses.push(`max_depth = $${paramIndex++}`);\n            values.push(updateData.max_depth);\n        }\n        if (setClauses.length === 0) {\n            return this.getWebsiteById(id);\n        }\n        setClauses.push(`updated_at = CURRENT_TIMESTAMP`);\n        values.push(id);\n        const query = `\n      UPDATE websites \n      SET ${setClauses.join(', ')}\n      WHERE id = $${paramIndex}\n      RETURNING \n        id,\n        project_id,\n        url,\n        name,\n        description,\n        status,\n        crawl_status,\n        total_pages_discovered,\n        pages_crawled,\n        pages_failed,\n        max_pages,\n        max_depth,\n        started_at,\n        completed_at,\n        created_date,\n        updated_at\n    `;\n        const result = await this.framework.executeQuery(query, values);\n        if (!result.rows || result.rows.length === 0) {\n            return null;\n        }\n        return this.mapRowToWebsite(result.rows[0]);\n    }\n    async deleteWebsite(id) {\n        const query = 'DELETE FROM websites WHERE id = $1';\n        const result = await this.framework.executeQuery(query, [\n            id\n        ]);\n        return (result.rowCount || 0) > 0;\n    }\n    async getWebsitesByStatus(status) {\n        const query = `\n      SELECT \n        id,\n        project_id,\n        url,\n        name,\n        description,\n        status,\n        crawl_status,\n        total_pages_discovered,\n        pages_crawled,\n        pages_failed,\n        max_pages,\n        max_depth,\n        started_at,\n        completed_at,\n        created_date,\n        updated_at\n      FROM websites \n      WHERE status = $1 \n      ORDER BY created_date DESC\n    `;\n        const result = await this.framework.executeQuery(query, [\n            status\n        ]);\n        return result.rows?.map((row)=>this.mapRowToWebsite(row)) || [];\n    }\n    async getWebsiteStats(projectId) {\n        let query = `\n      SELECT \n        COUNT(*) as total_websites,\n        COUNT(CASE WHEN status = 'active' THEN 1 END) as active_websites,\n        COUNT(CASE WHEN status = 'inactive' THEN 1 END) as inactive_websites,\n        COUNT(CASE WHEN status = 'pending_review' THEN 1 END) as pending_review_websites,\n        COUNT(CASE WHEN crawl_status = 'crawling' THEN 1 END) as crawling_websites,\n        COUNT(CASE WHEN crawl_status = 'completed' THEN 1 END) as completed_crawls\n      FROM websites\n    `;\n        const params = [];\n        if (projectId) {\n            query += ' WHERE project_id = $1';\n            params.push(projectId);\n        }\n        const result = await this.framework.executeQuery(query, params);\n        if (!result.rows || result.rows.length === 0) {\n            throw new Error('Failed to get website stats');\n        }\n        const row = result.rows[0];\n        return {\n            total_websites: parseInt(row.total_websites),\n            active_websites: parseInt(row.active_websites),\n            inactive_websites: parseInt(row.inactive_websites),\n            pending_review_websites: parseInt(row.pending_review_websites),\n            crawling_websites: parseInt(row.crawling_websites),\n            completed_crawls: parseInt(row.completed_crawls)\n        };\n    }\n    // New methods for crawling functionality\n    async getCrawlProgress(websiteId) {\n        const query = `\n      SELECT * FROM website_crawl_progress WHERE website_id = $1\n    `;\n        const result = await this.framework.executeQuery(query, [\n            websiteId\n        ]);\n        if (!result.rows || result.rows.length === 0) {\n            return null;\n        }\n        const row = result.rows[0];\n        return {\n            website_id: row.website_id,\n            project_id: row.project_id,\n            website_url: row.website_url,\n            website_name: row.website_name,\n            crawl_status: row.crawl_status,\n            total_pages_discovered: parseInt(row.total_pages_discovered || '0'),\n            pages_crawled: parseInt(row.pages_crawled || '0'),\n            pages_failed: parseInt(row.pages_failed || '0'),\n            max_pages: parseInt(row.max_pages || '30'),\n            max_depth: parseInt(row.max_depth || '3'),\n            started_at: row.started_at ? new Date(row.started_at) : undefined,\n            completed_at: row.completed_at ? new Date(row.completed_at) : undefined,\n            actual_pages_count: parseInt(row.actual_pages_count || '0'),\n            pending_pages: parseInt(row.pending_pages || '0'),\n            crawled_pages: parseInt(row.crawled_pages || '0'),\n            failed_pages: parseInt(row.failed_pages || '0'),\n            processing_pages: parseInt(row.processing_pages || '0'),\n            chunked_pages: parseInt(row.chunked_pages || '0'),\n            vectorized_pages: parseInt(row.vectorized_pages || '0'),\n            crawl_progress_percent: parseFloat(row.crawl_progress_percent || '0')\n        };\n    }\n    async updateCrawlStatus(websiteId, status, stats) {\n        const setClauses = [\n            'crawl_status = $2'\n        ];\n        const values = [\n            websiteId,\n            status\n        ];\n        let paramIndex = 3;\n        if (stats?.total_pages_discovered !== undefined) {\n            setClauses.push(`total_pages_discovered = $${paramIndex++}`);\n            values.push(stats.total_pages_discovered);\n        }\n        if (stats?.pages_crawled !== undefined) {\n            setClauses.push(`pages_crawled = $${paramIndex++}`);\n            values.push(stats.pages_crawled);\n        }\n        if (stats?.pages_failed !== undefined) {\n            setClauses.push(`pages_failed = $${paramIndex++}`);\n            values.push(stats.pages_failed);\n        }\n        if (status === 'crawling') {\n            setClauses.push(`started_at = CURRENT_TIMESTAMP`);\n        } else if (status === 'completed' || status === 'failed') {\n            setClauses.push(`completed_at = CURRENT_TIMESTAMP`);\n        }\n        const query = `\n      UPDATE websites \n      SET ${setClauses.join(', ')}, updated_at = CURRENT_TIMESTAMP\n      WHERE id = $1\n    `;\n        await this.framework.executeQuery(query, values);\n    }\n    async validateWebsiteUrl(url) {\n        // Basic URL validation (more sophisticated validation is done at DB level)\n        try {\n            new URL(url);\n            return url.startsWith('http://') || url.startsWith('https://');\n        } catch  {\n            return false;\n        }\n    }\n    async checkDuplicateUrl(projectId, url, excludeId) {\n        let query = 'SELECT COUNT(*) as count FROM websites WHERE project_id = $1 AND url = $2';\n        const params = [\n            projectId,\n            url\n        ];\n        if (excludeId) {\n            query += ' AND id != $3';\n            params.push(excludeId);\n        }\n        const result = await this.framework.executeQuery(query, params);\n        if (!result.rows || result.rows.length === 0) {\n            return false;\n        }\n        return parseInt(result.rows[0].count) > 0;\n    }\n    mapRowToWebsite(row) {\n        return {\n            id: row.id,\n            project_id: row.project_id,\n            url: row.url,\n            name: row.name,\n            description: row.description,\n            status: row.status,\n            crawl_status: row.crawl_status,\n            total_pages_discovered: parseInt(row.total_pages_discovered || '0'),\n            pages_crawled: parseInt(row.pages_crawled || '0'),\n            pages_failed: parseInt(row.pages_failed || '0'),\n            max_pages: parseInt(row.max_pages || '30'),\n            max_depth: parseInt(row.max_depth || '3'),\n            started_at: row.started_at ? new Date(row.started_at) : undefined,\n            completed_at: row.completed_at ? new Date(row.completed_at) : undefined,\n            created_date: new Date(row.created_date),\n            updated_at: new Date(row.updated_at)\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/WebsiteService.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/@juhomat/hexagonal-ai-framework/lib/framework/config sync recursive":
/*!*********************************************************************************!*\
  !*** ./node_modules/@juhomat/hexagonal-ai-framework/lib/framework/config/ sync ***!
  \*********************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@juhomat/hexagonal-ai-framework/lib/framework/config sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&page=%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute.ts&appDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&page=%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute.ts&appDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_juhomattila_Documents_Advance_node_js_projects_hubspot_onboarding_app_api_projects_id_websites_websiteId_crawl_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/projects/[id]/websites/[websiteId]/crawl/route.ts */ \"(rsc)/./app/api/projects/[id]/websites/[websiteId]/crawl/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/projects/[id]/websites/[websiteId]/crawl/route\",\n        pathname: \"/api/projects/[id]/websites/[websiteId]/crawl\",\n        filename: \"route\",\n        bundlePath: \"app/api/projects/[id]/websites/[websiteId]/crawl/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/juhomattila/Documents/Advance node.js projects/hubspot-onboarding/app/api/projects/[id]/websites/[websiteId]/crawl/route.ts\",\n    nextConfigOutput,\n    userland: _Users_juhomattila_Documents_Advance_node_js_projects_hubspot_onboarding_app_api_projects_id_websites_websiteId_crawl_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/projects/[id]/websites/[websiteId]/crawl/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&page=%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute.ts&appDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("pg");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("puppeteer");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod","vendor-chunks/@langchain","vendor-chunks/@juhomat","vendor-chunks/langsmith","vendor-chunks/semver","vendor-chunks/zod-to-json-schema","vendor-chunks/@cfworker","vendor-chunks/dotenv","vendor-chunks/p-queue","vendor-chunks/eventemitter3","vendor-chunks/js-tiktoken","vendor-chunks/retry","vendor-chunks/base64-js","vendor-chunks/camelcase","vendor-chunks/p-retry","vendor-chunks/p-timeout","vendor-chunks/decamelize","vendor-chunks/p-finally"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&page=%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2F%5Bid%5D%2Fwebsites%2F%5BwebsiteId%5D%2Fcrawl%2Froute.ts&appDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjuhomattila%2FDocuments%2FAdvance%20node.js%20projects%2Fhubspot-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();